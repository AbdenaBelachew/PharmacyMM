@model IEnumerable<PharmacyMM.Models.Category>
@using PharmacyMM.Models
@{
    ViewBag.Title = "Category Management";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<style>
    .modal-content {
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .table-container {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .table th {
        background: #343a40;
        color: #fff;
    }

    .table td {
        vertical-align: middle;
        transition: background-color 0.2s;
    }

    .table tbody tr:hover {
        background-color: #f1f3f5;
    }

    .btn-sm {
        margin: 2px;
        transition: transform 0.2s, background-color 0.2s;
    }

    .btn-sm:hover {
        transform: scale(1.05);
    }

    .error-message {
        color: #dc3545;
        font-size: 0.875rem;
        display: none;
        margin-top: 5px;
    }

    .btn-success, .btn-primary, .btn-danger {
        border-radius: 6px;
    }

    .modal-header {
        background: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .form-label {
        font-weight: 500;
    }

    .form-control:focus, .form-select:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    .search-container {
        width: 600px;
        position: relative;
    }

    @@media (max-width: 576px) {
        .search-container {
            max-width: 300px;
        }
    }

    .search-container .form-control {
        padding-right: 2.5rem;
    }

    .search-container .clear-search {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #6c757d;
        cursor: pointer;
        display: none;
    }

    .search-container .clear-search:hover {
        color: #dc3545;
    }
</style>

<div class="container mt-5">
    <h2 class="mb-4 text-primary fw-bold">Category Management</h2>

    <!-- Search Bar and Add Category Button -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="search-container">
            <input type="text" id="searchInput" class="form-control" placeholder="Search by name or description..." aria-label="Search categories">
            <button type="button" class="clear-search" id="clearSearch" aria-label="Clear search">
                <i class="bi bi-x-circle"></i>
            </button>
        </div>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
            <i class="bi bi-plus-circle me-2"></i>Add New Category
        </button>
    </div>

    <!-- Categories Table -->
    <div class="table-container p-3">
        <table class="table table-striped table-hover" id="categoryTable">
            <thead class="table-dark">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.CategoryName)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var category in Model)
                {
                    <tr>
                        <td>@category.CategoryName</td>
                        <td>@category.Description</td>
                        <td>
                            <button class="btn btn-primary btn-sm" onclick="openEditModal(@category.CategoryID)" aria-label="Edit @category.CategoryName">
                                <i class="bi bi-pencil-square"></i> Edit
                            </button>
                            <button class="btn btn-danger btn-sm" onclick="openDeleteModal(@category.CategoryID, '@category.CategoryName')" aria-label="Delete @category.CategoryName">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCategoryForm" novalidate>
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label class="form-label">Category Name</label>
                        <input type="text" name="CategoryName" class="form-control" required>
                        <div class="error-message" id="addCategoryNameError"></div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea name="Description" class="form-control" rows="4"></textarea>
                    </div>
                    <div class="error-message" id="addError"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="submitAddCategory()">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm" novalidate>
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="CategoryID" id="editCategoryID">
                    <div class="mb-3">
                        <label class="form-label">Category Name</label>
                        <input type="text" name="CategoryName" id="editCategoryName" class="form-control" required>
                        <div class="error-message" id="editCategoryNameError"></div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea name="Description" id="editDescription" class="form-control" rows="4"></textarea>
                    </div>
                    <div class="error-message" id="editError"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="submitEditCategory()">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCategoryModalLabel">Delete Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <span id="deleteCategoryName" class="fw-bold"></span>?</p>
                <input type="hidden" id="deleteCategoryID">
                <div class="error-message" id="deleteError"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="submitDeleteCategory()">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    // Client-side form validation
    function validateForm(formId) {
        const form = document.getElementById(formId);
        if (!form.checkValidity()) {
            form.classList.add('was-validated');
            return false;
        }
        return true;
    }

    // Search functionality
    $(document).ready(function () {
        $('#searchInput').on('input', function () {
            const searchTerm = $(this).val().toLowerCase();
            const clearButton = $('#clearSearch');

            if (searchTerm.length > 0) {
                clearButton.show();
            } else {
                clearButton.hide();
            }

            $('#categoryTable tbody tr').each(function () {
                const name = $(this).find('td:eq(0)').text().toLowerCase();
                const description = $(this).find('td:eq(1)').text().toLowerCase();
                if (name.includes(searchTerm) || description.includes(searchTerm)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });

        $('#clearSearch').on('click', function () {
            $('#searchInput').val('').trigger('input');
        });
    });

    function openEditModal(id) {
        $.ajax({
            url: '@Url.Action("Edit", "Categories")/' + id,
            type: 'GET',
            success: function (data) {
                $('#editCategoryID').val(data.CategoryID);
                $('#editCategoryName').val(data.CategoryName);
                $('#editDescription').val(data.Description);
                $('.error-message').hide();
                $('#editCategoryModal').modal('show');
            },
            error: function () {
                alert('Error loading category data');
            }
        });
    }

    function openDeleteModal(id, name) {
        $('#deleteCategoryID').val(id);
        $('#deleteCategoryName').text(name);
        $('#deleteError').hide();
        $('#deleteCategoryModal').modal('show');
    }

    function submitAddCategory() {
        if (!validateForm('addCategoryForm')) return;
        $.ajax({
            url: '@Url.Action("Create", "Categories")',
            type: 'POST',
            data: $('#addCategoryForm').serialize(),
            success: function (response) {
                if (response.success) {
                    $('#addCategoryModal').modal('hide');
                    location.reload();
                } else {
                    if (response.message.includes("Category Name")) {
                        $('#addCategoryNameError').text(response.message).show();
                    } else {
                        $('#addError').text(response.message).show();
                    }
                }
            },
            error: function () {
                $('#addError').text('Error saving category').show();
            }
        });
    }

    function submitEditCategory() {
        if (!validateForm('editCategoryForm')) return;
        $.ajax({
            url: '@Url.Action("Edit", "Categories")',
            type: 'POST',
            data: $('#editCategoryForm').serialize(),
            success: function (response) {
                if (response.success) {
                    $('#editCategoryModal').modal('hide');
                    location.reload();
                } else {
                    if (response.message.includes("Category Name")) {
                        $('#editCategoryNameError').text(response.message).show();
                    } else {
                        $('#editError').text(response.message).show();
                    }
                }
            },
            error: function () {
                $('#editError').text('Error saving changes').show();
            }
        });
    }

    function submitDeleteCategory() {
        $.ajax({
            url: '@Url.Action("Delete", "Categories")/' + $('#deleteCategoryID').val(),
            type: 'POST',
            data: { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
            success: function (response) {
                if (response.success) {
                    $('#deleteCategoryModal').modal('hide');
                    location.reload();
                } else {
                    $('#deleteError').text(response.message || 'Error deleting category').show();
                }
            },
            error: function (xhr, status, error) {
                var message = xhr.responseJSON?.message || 'Error deleting category: ' + error;
                $('#deleteError').text(message).show();
            }
        });
    }
</script>